notes 20211011 derived from 20211008

Plan for monday 2021/10/11:
- start installing hardware to the mechanical system
- work the distance sensor
- try full active mode again (code the range of operation)

==============================
- Make a new angle sensor shaft from 3D printing.
- Full speed ahead for the passive and assistive control codes, deadline: 12 Okt 2021
- install limit switches actuated by low level controller
==============================

Low level controller function:

During active mode (either full or semi):
1. accept position command from raspberry pi
2. actuate the motor

During passive mode:
1. when user set current angle, motor immediately goes to the corresponding angle 
	-> Serial communication
		->keep sending info about the current angle to raspberry 			  pi, and raspberry pi keeps sending command to arduino
		->when the parameters are set, 

2. when system is set to go, the system does the passive routine based on the parameters sent to the raspberry pi -> arduino.
3. The execution of passive training routine is done solely by the arduino
4. as the training goes, we could stop in the middle
5. if we don't stop the training as it progresses, the passive training will proceed until it finishes with the training.
6. 

OVERAL SYSTEMS CONSIDERATION
-python serial interrupt //nah
-static usb port
-static address to connect to wifi
-filter force sensor //ready for trial
-don't forget to integrate distance sensor // ready for assemblly
- motor speed range for passive mode 100 RPM (666 P/s) - 300 RPM (2000 P/s)

What you were working on (1.11 PM)
incorporate analog reading to PID control loop in stepperLow-level_working_plus_passive.ino
